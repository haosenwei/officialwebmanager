package ${prefix}.controller${spacePrefix};

import java.util.Map;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.WebUtils;

import ${prefix}.entity.common.Pager;
import ${prefix}.entity.common.Result;
import ${prefix}.entity${spacePrefix}.${EntityName};
import ${prefix}.service${spacePrefix}.${EntityName}ServiceImpl;

/**
 * 
 * 控制器
 * @author hsw
 *
 */
@Controller
@RequestMapping("${urlPrefix}")
public class ${EntityName}Controller {
	private static final Logger logger = LoggerFactory.getLogger(${EntityName}Controller.class);
	
	/**服务实现类**/
	@Autowired
	${EntityName}ServiceImpl ${entityName}ServiceImpl;

	/**
	 * main页面
	 * @return
	 */
	@RequestMapping("main")
	public ModelAndView main(){
		logger.info("${entityName} main");
		ModelAndView mav=new ModelAndView("${urlPrefix}${entityName}-main");
		return mav;
	}

	/**
	 * 跳转到添加页面
	 * @return
	 */
	@RequestMapping("toAdd")
	public ModelAndView toAdd(){
		logger.info("${entityName} toAdd");
		ModelAndView mav=new ModelAndView("${urlPrefix}${entityName}-add");
		return mav;
	}
	
	/**
	 * 执行添加操作
	 * @param
	 * @return
	 */
	@RequestMapping(value="doAdd",method=RequestMethod.POST)
	@ResponseBody
	public Result doAdd(${EntityName} ${entityName}Form){
		logger.info("${entityName} doAdd");
		${entityName}ServiceImpl.add${EntityName}(${entityName}Form);
		return new Result();
	}
	
	/**
	 * 跳转到修改页面
	 * @param id
	 * @return
	 */
	@RequestMapping("toEdit")
	public ModelAndView toEdit(<#list list as obj><#if obj.keyDic=="PRI">${obj.javaType}</#if></#list> id){
		logger.info("${entityName} toEdit");
		ModelAndView mav=new ModelAndView("${urlPrefix}${entityName}-edit");
		${EntityName} ${entityName}=${entityName}ServiceImpl.find${EntityName}ById(id);
		mav.addObject("${entityName}", ${entityName});
		return mav;
	}
	
	/**
	 * 执行修改操作
	 * @param ${entityName}Form
	 * @return
	 */
	@RequestMapping(value="doEdit",method=RequestMethod.POST)
	@ResponseBody
	public Result doEdit(${EntityName} ${entityName}Form){
		logger.info("${entityName} doEdit");
		${entityName}ServiceImpl.modify${EntityName}(${entityName}Form);
		return new Result();
	}
	
	/**
	 * 执行删除操作
	 * @param ids
	 * @return
	 */
	@RequestMapping(value="del",method=RequestMethod.POST)
	@ResponseBody
	public Result del(String ids){
		logger.info("${entityName} doEdit");
		${entityName}ServiceImpl.remove${EntityName}ByIds(ids);
		return new Result();
	}
	
	/**
	 * 跳转到查看页面
	 * @param id
	 * @return
	 */
	@RequestMapping("toView")
	public ModelAndView toView(<#list list as obj><#if obj.keyDic=="PRI">${obj.javaType}</#if></#list> id){
		logger.info("${entityName} doEdit");
		ModelAndView mav=new ModelAndView("${urlPrefix}${entityName}-view");
		${EntityName} ${entityName}=${entityName}ServiceImpl.find${EntityName}ById(id);
		mav.addObject("${entityName}", ${entityName});
		return mav;
	}
	
	/**
	 * 分页查询数据
	 * @param request
	 * @param pager
	 * @return
	 */
	@RequestMapping(value="search" ,method=RequestMethod.POST)
	@ResponseBody
	public Pager search(HttpServletRequest request,Pager pager){
		logger.info("${entityName} search");
		Map<String, Object> condition=WebUtils.getParametersStartingWith(request, "search_");
		${entityName}ServiceImpl.find${EntityName}ByPager(condition, pager);
		return pager;
	}
	
	/**
	 * 跳转到dialog页面
	 * @return
	 */
	@RequestMapping("toDialog")
	public ModelAndView toDialog(){
		logger.info("${entityName} toDialog");
		ModelAndView mav=new ModelAndView("${urlPrefix}${entityName}-dialog");
		return mav;
	}
	
	/**
	 * dialog检索
	 * @param request
	 * @param pager
	 * @return
	 */
	@RequestMapping(value="dialogSearch",method=RequestMethod.POST)
	@ResponseBody
	public Pager dialogSearch(HttpServletRequest request,Pager pager){
		logger.info("${entityName} dialogSearch");
		Map<String, Object> condition=WebUtils.getParametersStartingWith(request, "search_");
		${entityName}ServiceImpl.find${EntityName}ByPager(condition,pager);
		return pager;
	}
}